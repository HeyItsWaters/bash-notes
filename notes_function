#!/bin/bash
notes() {
	usage() { echo "notes <noteName>"; return; }

	newNote=""
	notesList=""
	note=""
	dive=""

	curDate=$(date +%Y-%m-%d:%H:%M:%S)

	if [[ "$1" == "new" || -z "$1" ]]
	then
		if ! [[ -z $2 ]]
		then
			newNote="$2"
		fi

		if [[ -z "$newNote" ]]
		then
			read -p "New note name [newNote_$curDate]: " newNote
		fi

		if [[ -z "$newNote" ]]
		then
			newNote="newNote_$curDate"
		fi
		echo -e "### $newNote ###\n\n###" > ~/Documents/notes/"$newNote"

		vi ~/Documents/notes/"$newNote"

		if [[ "$(stat -c %s ~/Documents/notes/"$newNote")" -le 20 ]]
		then
			rm -rf ~/Documents/notes/"$newNote"
			echo "Not not created..."
			return
		fi

		echo "New note created with name: $newNote"
		return

	elif [[ "$1" == "list" ]]
	then
		ls -lA ~/Documents/notes/ | awk '{print $10}'
		return
	fi

	if [[ "$2" == "edit" ]]
	then
		notesList=$(ls ~/Documents/notes | grep -i "$1")
		for note in $notesList
		do
			vi ~/Documents/notes/"$note"
		done
	elif ! [[ -z "$2" ]] && [[ "$2" != "edit" ]]
	then
		dive="$2"
	fi

	notesList=$(ls ~/Documents/notes/ | grep -i "$1")

	if [ -z "$notesList" ]
	then
		echo "Not notes found."; return
	fi

	for note in "$notesList"
	do
		if [[ -z "$dive" ]]
		then
			cat ~/Documents/notes/"$note"
		else
			cat ~/Documents/notes/"$note" | sed -n -e "/$dive/,/###/Ip"
		fi
	done
}
